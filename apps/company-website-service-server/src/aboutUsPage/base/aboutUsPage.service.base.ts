/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AboutUsPage as PrismaAboutUsPage } from "@prisma/client";

export class AboutUsPageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AboutUsPageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.aboutUsPage.count(args);
  }

  async aboutUsPages(
    args: Prisma.AboutUsPageFindManyArgs
  ): Promise<PrismaAboutUsPage[]> {
    return this.prisma.aboutUsPage.findMany(args);
  }
  async aboutUsPage(
    args: Prisma.AboutUsPageFindUniqueArgs
  ): Promise<PrismaAboutUsPage | null> {
    return this.prisma.aboutUsPage.findUnique(args);
  }
  async createAboutUsPage(
    args: Prisma.AboutUsPageCreateArgs
  ): Promise<PrismaAboutUsPage> {
    return this.prisma.aboutUsPage.create(args);
  }
  async updateAboutUsPage(
    args: Prisma.AboutUsPageUpdateArgs
  ): Promise<PrismaAboutUsPage> {
    return this.prisma.aboutUsPage.update(args);
  }
  async deleteAboutUsPage(
    args: Prisma.AboutUsPageDeleteArgs
  ): Promise<PrismaAboutUsPage> {
    return this.prisma.aboutUsPage.delete(args);
  }
}
