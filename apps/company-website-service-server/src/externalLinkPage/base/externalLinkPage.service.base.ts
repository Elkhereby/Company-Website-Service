/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ExternalLinkPage as PrismaExternalLinkPage,
} from "@prisma/client";

export class ExternalLinkPageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExternalLinkPageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.externalLinkPage.count(args);
  }

  async externalLinkPages(
    args: Prisma.ExternalLinkPageFindManyArgs
  ): Promise<PrismaExternalLinkPage[]> {
    return this.prisma.externalLinkPage.findMany(args);
  }
  async externalLinkPage(
    args: Prisma.ExternalLinkPageFindUniqueArgs
  ): Promise<PrismaExternalLinkPage | null> {
    return this.prisma.externalLinkPage.findUnique(args);
  }
  async createExternalLinkPage(
    args: Prisma.ExternalLinkPageCreateArgs
  ): Promise<PrismaExternalLinkPage> {
    return this.prisma.externalLinkPage.create(args);
  }
  async updateExternalLinkPage(
    args: Prisma.ExternalLinkPageUpdateArgs
  ): Promise<PrismaExternalLinkPage> {
    return this.prisma.externalLinkPage.update(args);
  }
  async deleteExternalLinkPage(
    args: Prisma.ExternalLinkPageDeleteArgs
  ): Promise<PrismaExternalLinkPage> {
    return this.prisma.externalLinkPage.delete(args);
  }
}
