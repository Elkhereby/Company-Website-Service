/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ContactUsPage as PrismaContactUsPage } from "@prisma/client";

export class ContactUsPageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContactUsPageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contactUsPage.count(args);
  }

  async contactUsPages(
    args: Prisma.ContactUsPageFindManyArgs
  ): Promise<PrismaContactUsPage[]> {
    return this.prisma.contactUsPage.findMany(args);
  }
  async contactUsPage(
    args: Prisma.ContactUsPageFindUniqueArgs
  ): Promise<PrismaContactUsPage | null> {
    return this.prisma.contactUsPage.findUnique(args);
  }
  async createContactUsPage(
    args: Prisma.ContactUsPageCreateArgs
  ): Promise<PrismaContactUsPage> {
    return this.prisma.contactUsPage.create(args);
  }
  async updateContactUsPage(
    args: Prisma.ContactUsPageUpdateArgs
  ): Promise<PrismaContactUsPage> {
    return this.prisma.contactUsPage.update(args);
  }
  async deleteContactUsPage(
    args: Prisma.ContactUsPageDeleteArgs
  ): Promise<PrismaContactUsPage> {
    return this.prisma.contactUsPage.delete(args);
  }
}
