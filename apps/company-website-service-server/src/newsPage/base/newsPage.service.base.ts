/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, NewsPage as PrismaNewsPage } from "@prisma/client";

export class NewsPageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.NewsPageCountArgs, "select">): Promise<number> {
    return this.prisma.newsPage.count(args);
  }

  async newsPages(
    args: Prisma.NewsPageFindManyArgs
  ): Promise<PrismaNewsPage[]> {
    return this.prisma.newsPage.findMany(args);
  }
  async newsPage(
    args: Prisma.NewsPageFindUniqueArgs
  ): Promise<PrismaNewsPage | null> {
    return this.prisma.newsPage.findUnique(args);
  }
  async createNewsPage(
    args: Prisma.NewsPageCreateArgs
  ): Promise<PrismaNewsPage> {
    return this.prisma.newsPage.create(args);
  }
  async updateNewsPage(
    args: Prisma.NewsPageUpdateArgs
  ): Promise<PrismaNewsPage> {
    return this.prisma.newsPage.update(args);
  }
  async deleteNewsPage(
    args: Prisma.NewsPageDeleteArgs
  ): Promise<PrismaNewsPage> {
    return this.prisma.newsPage.delete(args);
  }
}
